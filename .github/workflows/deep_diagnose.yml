# Legacy Notice:
# Dieser Workflow bleibt für historische Diagnosezwecke erhalten,
# wird jedoch ab AT-028 durch den konsolidierten CI-Layer (Meta Diagnose) ersetzt.
# Status: legacy (nicht aktiv mergen)

name: CI · Deep Diagnose v1.1
on:
  push:
  pull_request:
  schedule:
    - cron: "0 6 * * 1"   # Mo 06:00 UTC
jobs:
  deep-diagnose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Run Deep Diagnose (tolerate warnings)
        id: run
        continue-on-error: true
        run: node scripts/deep_diagnose_repo_v1_1.mjs
      - name: Upload Deep Diagnose Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deep-diagnose-v1_1
          path: |
            artefacts/logs/deep_diagnose_v1_1.md
            artefacts/logs/deep_diagnose_v1_1.json
      - name: Classify outcome
        if: always()
        run: |
          CODE=$(node -e "const fs=require('fs');let c=0;try{c=JSON.parse(fs.readFileSync('artefacts/logs/deep_diagnose_v1_1.json','utf8')).exit_code??0;}catch(e){c=1}process.stdout.write(String(c));")
          echo "exit=$CODE"
          if [ "$CODE" -eq 1 ]; then
            echo '::error::Deep Diagnose failed (exit=1).'; exit 1
          elif [ "$CODE" -eq 2 ]; then
            echo '::warning::Deep Diagnose warnings (exit=2).'; exit 0
          else
            echo 'Deep Diagnose passed.'; exit 0
          fi
