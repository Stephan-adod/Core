name: CI · Meta Diagnose v1.8
on:
  push:
  pull_request:
  schedule:
    - cron: "0 7 * * 1" # Mo 07:00 UTC
jobs:
  meta-diagnose:
    runs-on: ubuntu-latest
    defaults: { run: { shell: bash } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Run Meta Diagnose (tolerate warnings)
        id: run_meta
        continue-on-error: true
        run: node scripts/run_meta_diagnose_v1_8.mjs
      - name: Upload Meta Diagnose Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: meta-diagnose-v1_8-reports
          path: |
            artefacts/logs/meta/diagnose_meta_v1.8.md
            artefacts/logs/meta/diagnose_meta_v1.8.json
      - name: Classify outcome (fail on missing report / non-success run)
        if: always()
        env:
          RUN_OUTCOME: ${{ steps.run_meta.outcome }}
        run: |
          echo "run_outcome=$RUN_OUTCOME"
          REPORT="artefacts/logs/meta/diagnose_meta_v1.8.json"
          if [ "$RUN_OUTCOME" != "success" ]; then
            echo "::error::Meta diagnose step did not complete successfully (outcome=$RUN_OUTCOME)."
            [ -f "$REPORT" ] || exit 1
          fi
          if [ ! -f "$REPORT" ]; then
            echo "::error::Missing report $REPORT – diagnose likely crashed."; exit 1
          fi
          CODE=$(node -e "const fs=require('fs');let c=0;try{const j=JSON.parse(fs.readFileSync('artefacts/logs/meta/diagnose_meta_v1.8.json','utf8'));c=(j.exit_code??0);}catch(e){c=1;}process.stdout.write(String(c));")
          echo "exit=$CODE"
          if [ "$CODE" -eq 1 ]; then
            echo '::error::Meta Diagnose failed (exit=1).'; exit 1
          elif [ "$CODE" -eq 2 ]; then
            echo '::warning::Meta Diagnose warnings (exit=2).'; exit 0
          else
            echo 'Meta Diagnose passed.'; exit 0
          fi
