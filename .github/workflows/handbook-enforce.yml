name: Handbook · Enforcement (Auto-Body + Ordered)
on:
  pull_request:
    types: [opened, edited, synchronize]
    paths:
      - '**'
      - '!.github/**'   # Guards: keine reinen .github PRs prüfen

permissions:
  contents: read
  pull-requests: write   # zum Aktualisieren des PR-Body

jobs:
  autobody:
    name: Ensure PR Body (inject template if missing)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Read current PR body
        id: get
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            const hasComp = /##\s*AI-First Handbook Compliance/i.test(body);
            core.setOutput('number', pr.number);
            core.setOutput('body', body);
            core.setOutput('has_comp_original', hasComp ? 'yes' : 'no');
      - name: Compose body (template if missing)
        id: compose
        run: |
          printf "%s" "${{ steps.get.outputs.body }}" | node scripts/generate_pr_body.mjs > body.out
          echo "has_comp_output=$(grep -qi 'AI-First Handbook Compliance' body.out && echo yes || echo no)" >> $GITHUB_OUTPUT
      - name: Update PR body (ONLY if original had no compliance)
        if: steps.get.outputs.has_comp_original == 'no'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('body.out','utf8');
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body
            });
            core.info('PR body updated with template (autobody applied).')

  enforce:
    name: Validate Handbook Compliance
    runs-on: ubuntu-latest
    needs: autobody
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Wait for PR body sync
        run: |
          echo "⏳ Waiting 8s for PR body cache to update..."
          sleep 8

      - name: Reload PR body from GitHub API
        id: reload
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const body = pr.data.body || '';
            require('fs').writeFileSync('pr_body_latest.txt', body);
            core.info('✅ Reloaded PR body, length=' + body.length);

      - name: Run validator (strict) against ACTUAL body
        run: node scripts/validate_handbook.mjs < pr_body_latest.txt
