name: Handbook ¬∑ Enforcement (Auto-Synthesis ‚Üí Auto-Body ‚Üí Enforce)

on:
  pull_request:
    types: [opened, edited, synchronize]
    paths:
      - '**'
      - '!.github/**'  # Guard: reine .github PRs nicht pr√ºfen

permissions:
  contents: read
  pull-requests: write   # zum Aktualisieren des PR-Body

jobs:
  synthesize:
    name: Synthesize PR Body (AI-First)
    runs-on: ubuntu-latest
    outputs:
      body: ${{ steps.out.outputs.body }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Generate body from policy + context
        id: out
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/synthesize_pr_body.mjs > body.out
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat body.out >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  autobody:
    name: Ensure PR Body (inject if missing)
    runs-on: ubuntu-latest
    needs: synthesize
    steps:
      - uses: actions/checkout@v4
      - name: Inspect original PR body
        id: get
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body || '';
            const hasComp = /##\s*AI-First Handbook Compliance/i.test(body);
            core.setOutput('has_comp_original', hasComp ? 'yes' : 'no');
      - name: Update PR body (only if original missing compliance)
        if: steps.get.outputs.has_comp_original == 'no'
        uses: actions/github-script@v7
        with:
          script: |
            const body = `${{ toJSON(needs.synthesize.outputs.body) }}`;
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body
            });
            core.info('PR body set by Auto-Synthesis.');
      - name: Comment (audit trail)
        if: steps.get.outputs.has_comp_original == 'no'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "üß† Auto-Synthesis hat den PR-Body gem√§√ü AI-First Handbook generiert."
            });

  enforce:
    name: Validate Handbook Compliance
    runs-on: ubuntu-latest
    needs: autobody
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Wait for PR body sync
        run: |
          echo "‚è≥ waiting for PR body cache‚Ä¶" && sleep 8
      - name: Reload PR body from GitHub API
        id: reload
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const body = pr.data.body || '';
            require('fs').writeFileSync('pr_body_latest.txt', body);
            core.info('‚úÖ Reloaded PR body, length=' + body.length);
      - name: Run validator (strict) against ACTUAL body
        run: node scripts/validate_handbook.mjs < pr_body_latest.txt
