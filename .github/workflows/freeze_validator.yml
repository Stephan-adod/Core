name: Freeze · Validator (v1.8)
on:
  pull_request:
    paths-ignore:
      - 'archive/**'
  workflow_dispatch:

jobs:
  mode:
    runs-on: ubuntu-latest
    outputs:
      v2: ${{ steps.detect.outputs.v2 }}
      intent: ${{ steps.detect.outputs.intent }}
    steps:
      - uses: actions/checkout@v4
      - id: detect
        shell: bash
        run: |
          set -e
          if [[ -f meta/CORE_INDEX_v2.0.md ]]; then echo "v2=true" >> $GITHUB_OUTPUT; else echo "v2=false" >> $GITHUB_OUTPUT; fi
          intent=unknown
          if [[ -f meta/AI_First_Roadmap_v2.0.md ]]; then
            if grep -qE 'intent_state:\s*confirmed' meta/AI_First_Roadmap_v2.0.md; then intent=confirmed
            elif grep -qE 'intent_state:\s*draft' meta/AI_First_Roadmap_v2.0.md; then intent=draft
            fi
          fi
          echo "intent=$intent" >> $GITHUB_OUTPUT

  freeze-validate:
    needs: mode
    if: needs.mode.outputs.v2 == 'false'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Install deps (skipped – no package.json needed)
        run: echo "skip npm install – scripts use only Node stdlib"
      - name: Trust Probe (optional)
        run: |
          node -e "const fs=require('fs'),cp=require('child_process'); \
          if(fs.existsSync('scripts/run_trust_probe_v1_9_1.mjs')){ \
            cp.execSync('node scripts/run_trust_probe_v1_9_1.mjs --no-fail',{stdio:'inherit'}) \
          } else { console.log('Trust Probe not found, skip'); }"
        # ensure optional probe step never fails the job if miss thresholds
      - name: Bootstrap (backlog v1.8 + seed ticket)
        run: node scripts/bootstrap_backlog_v1_8.mjs
      - name: Harmonize backlog & tickets
        run: |
          if [ -f scripts/harmonize_backlog_headers.mjs ]; then node scripts/harmonize_backlog_headers.mjs; fi
          if [ -f scripts/harmonize_tickets.mjs ]; then node scripts/harmonize_tickets.mjs; fi
      - name: Policy-as-Code Sync
        run: node scripts/policy_sync.mjs --strict
      - name: Deep Diagnose
        run: node scripts/diagnose_repo_state_v1_2.mjs || true
      - name: Upload Diagnose
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deep-diagnose-v1_2
          path: artefacts/logs/deep_diagnose_*.*

      - name: Governance Loop Check
        run: node scripts/validate_loop_state.mjs --strict
        continue-on-error: false
        timeout-minutes: 5
      - name: Enforce Freeze Gate
        run: node scripts/diagnose_repo_state_v1_2.mjs --enforce-freeze

  health-v2:
    needs: mode
    if: needs.mode.outputs.v2 == 'true' && needs.mode.outputs.intent == 'confirmed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: v2 skeleton sanity
        shell: bash
        run: |
          set -e
          test -f meta/AI_First_System_Architecture_v2.0.md
          test -f meta/AI_First_Roadmap_v2.0.md
          test -f meta/AI_First_Handbook_v2.0.md
          test -f meta/Human_in_the_Loop_Playbook_v2.0.md
          test -f docs/AI_First_Business_Case_v2.0.md
          echo "v2 skeleton ok (intent confirmed)"
